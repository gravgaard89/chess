{"version":3,"sources":["store/BoardStore.ts","logo.svg","Coordinate.ts","Piece.ts","Square.ts","SquareCoordinate.tsx","Board.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Type","Coordinate","col","row","this","other","rowLabel","colLabel","Piece","name","hasMoved","isWhite","type","PAWN","KNIGHT","BISHOP","coordinates","Array","i","push","ROOK","QUEEN","KING","Square","coordinate","isSelected","isSelectable","piece","observable","boardStore","pieces","squareStartingPositions","changeTurn","isWhiteTurn","setOnlySquaresWithPiecesToSelectable","squares","forEach","element","reset","toggleToUpdateView","hasPawnEnemyAhead","makeObservable","selectedSquare","possibleMoves","isPressed","s","setPossibleMoves","oldSquare","find","x","toString","undefined","action","relativeCoordinates","relativeMoves","map","selectableSquaresExceptFriendSquares","filter","some","y","SquareCoordinate","observer","square","props","className","onClick","handleClick","disabled","style","backgroundColor","fontSize","color","React","handleClickedSquare","Board","App","handleReset","logo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9594931.chunk.js","sourcesContent":["import { action, computed, makeAutoObservable, makeObservable, observable } from \"mobx\";\nimport { EnumDeclaration } from \"typescript\";\nimport Coordinate from \"../Coordinate\";\nimport Piece from \"../Piece\";\nimport Square from \"../Square\";\n\nenum Type {\n    // PAWN = \"♙\",\n    // ROOK = \"♖\",\n    // KNIGHT = \"♘\",\n    // BISHOP = \"♗\",\n    // QUEEN = \"♕\",\n    // KING = \"♔\",\n\n    PAWN = \"♟\",\n    ROOK = \"♜\",\n    KNIGHT = \"♞\",\n    BISHOP = \"♝\",\n    QUEEN = \"♛\",\n    KING = \"♚\",\n}\n\nclass BoardStore {\n    pieces: Array<Piece>;\n    @observable squares: Array<Square>;\n    @observable isPressed: boolean;\n    @observable selectedSquare: Square;\n    @observable possibleMoves: Array<Coordinate>;\n    @observable isWhiteTurn: boolean;\n\n    constructor() {\n        makeObservable(this);\n        this.selectedSquare = new Square(new Coordinate(-1, -1));\n        this.possibleMoves = [];\n        this.isPressed = false;\n        this.pieces = [];\n        this.squares = this.squareStartingPositions();\n        this.isWhiteTurn = true;\n        this.setOnlySquaresWithPiecesToSelectable();\n    }\n\n    squareStartingPositions = () => {\n        return [\n            new Square(new Coordinate(0, 0), false, true, new Piece(\"Rook\", false, false, Type.ROOK)),\n            new Square(new Coordinate(1, 0), false, true, new Piece(\"Knight\", false, false, Type.KNIGHT)),\n            new Square(new Coordinate(2, 0), false, true, new Piece(\"Bishop\", false, false, Type.BISHOP)),\n            new Square(new Coordinate(3, 0), false, true, new Piece(\"King\", false, false, Type.KING)),\n            new Square(new Coordinate(4, 0), false, true, new Piece(\"Queen\", false, false, Type.QUEEN)),\n            new Square(new Coordinate(5, 0), false, true, new Piece(\"Bishop\", false, false, Type.BISHOP)),\n            new Square(new Coordinate(6, 0), false, true, new Piece(\"Knight\", false, false, Type.KNIGHT)),\n            new Square(new Coordinate(7, 0), false, true, new Piece(\"Rook\", false, false, Type.ROOK)),\n            new Square(new Coordinate(0, 1), false, true, new Piece(\"Pawn\", false, false, Type.PAWN)),\n            new Square(new Coordinate(1, 1), false, true, new Piece(\"Pawn\", false, false, Type.PAWN)),\n            new Square(new Coordinate(2, 1), false, true, new Piece(\"Pawn\", false, false, Type.PAWN)),\n            new Square(new Coordinate(3, 1), false, true, new Piece(\"Pawn\", false, false, Type.PAWN)),\n            new Square(new Coordinate(4, 1), false, true, new Piece(\"Pawn\", false, false, Type.PAWN)),\n            new Square(new Coordinate(5, 1), false, true, new Piece(\"Pawn\", false, false, Type.PAWN)),\n            new Square(new Coordinate(6, 1), false, true, new Piece(\"Pawn\", false, false, Type.PAWN)),\n            new Square(new Coordinate(7, 1), false, true, new Piece(\"Pawn\", false, false, Type.PAWN)),\n            new Square(new Coordinate(0, 2)),\n            new Square(new Coordinate(1, 2)),\n            new Square(new Coordinate(2, 2)),\n            new Square(new Coordinate(3, 2)),\n            new Square(new Coordinate(4, 2)),\n            new Square(new Coordinate(5, 2)),\n            new Square(new Coordinate(6, 2)),\n            new Square(new Coordinate(7, 2)),\n            new Square(new Coordinate(0, 3)),\n            new Square(new Coordinate(1, 3)),\n            new Square(new Coordinate(2, 3)),\n            new Square(new Coordinate(3, 3)),\n            new Square(new Coordinate(4, 3)),\n            new Square(new Coordinate(5, 3)),\n            new Square(new Coordinate(6, 3)),\n            new Square(new Coordinate(7, 3)),\n            new Square(new Coordinate(0, 4)),\n            new Square(new Coordinate(1, 4)),\n            new Square(new Coordinate(2, 4)),\n            new Square(new Coordinate(3, 4)),\n            new Square(new Coordinate(4, 4)),\n            new Square(new Coordinate(5, 4)),\n            new Square(new Coordinate(6, 4)),\n            new Square(new Coordinate(7, 4)),\n            new Square(new Coordinate(0, 5)),\n            new Square(new Coordinate(1, 5)),\n            new Square(new Coordinate(2, 5)),\n            new Square(new Coordinate(3, 5)),\n            new Square(new Coordinate(4, 5)),\n            new Square(new Coordinate(5, 5)),\n            new Square(new Coordinate(6, 5)),\n            new Square(new Coordinate(7, 5)),\n            new Square(new Coordinate(0, 6), false, true, new Piece(\"Pawn\", false, true, Type.PAWN)),\n            new Square(new Coordinate(1, 6), false, true, new Piece(\"Pawn\", false, true, Type.PAWN)),\n            new Square(new Coordinate(2, 6), false, true, new Piece(\"Pawn\", false, true, Type.PAWN)),\n            new Square(new Coordinate(3, 6), false, true, new Piece(\"Pawn\", false, true, Type.PAWN)),\n            new Square(new Coordinate(4, 6), false, true, new Piece(\"Pawn\", false, true, Type.PAWN)),\n            new Square(new Coordinate(5, 6), false, true, new Piece(\"Pawn\", false, true, Type.PAWN)),\n            new Square(new Coordinate(6, 6), false, true, new Piece(\"Pawn\", false, true, Type.PAWN)),\n            new Square(new Coordinate(7, 6), false, true, new Piece(\"Pawn\", false, true, Type.PAWN)),\n            new Square(new Coordinate(0, 7), false, true, new Piece(\"Rook\", false, true, Type.ROOK)),\n            new Square(new Coordinate(1, 7), false, true, new Piece(\"Knight\", false, true, Type.KNIGHT)),\n            new Square(new Coordinate(2, 7), false, true, new Piece(\"Bishop\", false, true, Type.BISHOP)),\n            new Square(new Coordinate(3, 7), false, true, new Piece(\"King\", false, true, Type.KING)),\n            new Square(new Coordinate(4, 7), false, true, new Piece(\"Queen\", false, true, Type.QUEEN)),\n            new Square(new Coordinate(5, 7), false, true, new Piece(\"Bishop\", false, true, Type.BISHOP)),\n            new Square(new Coordinate(6, 7), false, true, new Piece(\"Knight\", false, true, Type.KNIGHT)),\n            new Square(new Coordinate(7, 7), false, true, new Piece(\"Rook\", false, true, Type.ROOK)),\n        ];\n    };\n\n    handleClickedSquare(s: Square) {\n        if ((s.piece && s.piece.isWhite && this.isWhiteTurn) || (s.piece && !s.piece.isWhite && !this.isWhiteTurn)) {\n            s.isSelected = !s.isSelected;\n            this.selectedSquare = s;\n            this.setPossibleMoves();\n        } else {\n            s.piece = this.selectedSquare.piece;\n            const oldSquare = this.squares.find((x) => x.coordinate.toString() == this.selectedSquare.coordinate.toString());\n\n            if (oldSquare) {\n                oldSquare.piece = undefined;\n                oldSquare.isSelected = false;\n            }\n\n            this.changeTurn();\n        }\n        this.toggleToUpdateView();\n    }\n\n    changeTurn = () => {\n        this.isWhiteTurn = !this.isWhiteTurn;\n        this.setOnlySquaresWithPiecesToSelectable();\n    };\n\n    setOnlySquaresWithPiecesToSelectable = () => {\n        this.squares.forEach((element) => {\n            if ((element.piece && element.piece?.isWhite && this.isWhiteTurn) || (element.piece && !element.piece.isWhite && !this.isWhiteTurn)) {\n                element.isSelectable = true;\n            } else {\n                element.isSelectable = false;\n            }\n        });\n    };\n\n    reset = () => {\n        this.squares = this.squareStartingPositions();\n        this.toggleToUpdateView();\n        this.isWhiteTurn = true;\n        this.setOnlySquaresWithPiecesToSelectable();\n    };\n\n    @action toggleToUpdateView = () => {\n        this.isPressed = !this.isPressed;\n    };\n\n    @action setPossibleMoves = () => {\n        this.possibleMoves = [];\n        this.squares.forEach((element) => {\n            element.isSelectable = false;\n        });\n        if (this.selectedSquare.piece) {\n            const relativeCoordinates = this.selectedSquare.piece.relativeMoves();\n            this.possibleMoves = relativeCoordinates.map((x) => {\n                return new Coordinate(this.selectedSquare.coordinate.col + x.col, this.selectedSquare.coordinate.row + x.row);\n            });\n\n            const selectableSquares = this.squares.filter((x) => this.possibleMoves.some((y) => y.toString() == x.coordinate.toString()));\n            const selectableSquaresExceptFriendSquares = selectableSquares.filter((x) => (x.piece && x.piece.isWhite == !this.selectedSquare.piece?.isWhite) || !x.piece);\n\n            // check for possible pawn attack\n            if (this.selectedSquare.piece.type == Type.PAWN) {\n                const hasPawnEnemyInFront = this.hasPawnEnemyAhead();\n            }\n\n            selectableSquaresExceptFriendSquares.forEach((element) => {\n                element.isSelectable = true;\n            });\n        }\n    };\n\n    hasPawnEnemyAhead = () => {\n        return;\n    };\n}\n\nconst boardStore = new BoardStore();\n\nexport { boardStore, Type };\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default class Coordinate {\n    row: number;\n    col: number;\n\n    constructor(col: number, row: number) {\n        this.col = col;\n        this.row = row;\n    }\n\n    /**\n     * Compare two coordinates\n     */\n    public equals(other: Coordinate): boolean {\n        return this.row == other.row && this.col == other.col;\n    }\n\n    /**\n     * Convert the this to board's coordinate\n     */\n    public getBoardCoordinateRepresentation() {\n        const rowLabel = 8 - this.row;\n        const colLabel = 8 - this.col;\n        return `(${rowLabel + \",\" + colLabel})`;\n    }\n\n    public toString(): string {\n        return `(${this.row},${this.col})`;\n    }\n}\n","import Coordinate from \"./Coordinate\";\nimport { Type } from \"./store/BoardStore\";\n\nexport default class Piece {\n    public name: string;\n    public hasMoved: boolean;\n    public isWhite: boolean;\n    public type: string;\n\n    constructor(name: string, hasMoved: boolean, isWhite: boolean, type: string) {\n        this.name = name;\n        this.hasMoved = hasMoved;\n        this.isWhite = isWhite;\n        this.type = type;\n    }\n\n    public relativeMoves() {\n        if (this.type == Type.PAWN && this.isWhite == true) {\n            if (this.hasMoved) {\n                return [new Coordinate(0, -1)];\n            } else {\n                this.hasMoved = true;\n                return [new Coordinate(0, -1), new Coordinate(0, -2)];\n            }\n        }\n        if (this.type == Type.PAWN && this.isWhite == false) {\n            if (this.hasMoved) {\n                return [new Coordinate(0, 1)];\n            } else {\n                this.hasMoved = true;\n                return [new Coordinate(0, 1), new Coordinate(0, 2)];\n            }\n        }\n        if (this.type == Type.KNIGHT) {\n            return [\n                new Coordinate(-1, -2),\n                new Coordinate(1, -2),\n                new Coordinate(2, -1),\n                new Coordinate(2, 1),\n                new Coordinate(1, 2),\n                new Coordinate(-1, 2),\n                new Coordinate(-2, 1),\n                new Coordinate(-2, -1),\n            ];\n        }\n        if (this.type == Type.BISHOP) {\n            let coordinates = Array<Coordinate>();\n            for (let i = 1; i < 7; i++) {\n                coordinates.push(new Coordinate(i, i));\n                coordinates.push(new Coordinate(-i, -i));\n                coordinates.push(new Coordinate(-i, i));\n                coordinates.push(new Coordinate(i, -i));\n            }\n            return coordinates;\n        }\n        if (this.type == Type.ROOK) {\n            let coordinates = Array<Coordinate>();\n            for (let i = 1; i < 7; i++) {\n                coordinates.push(new Coordinate(0, i));\n                coordinates.push(new Coordinate(0, -i));\n                coordinates.push(new Coordinate(i, 0));\n                coordinates.push(new Coordinate(-i, 0));\n            }\n            return coordinates;\n        }\n        if (this.type == Type.QUEEN) {\n            let coordinates = Array<Coordinate>();\n            for (let i = 1; i < 8; i++) {\n                coordinates.push(new Coordinate(i, i));\n                coordinates.push(new Coordinate(-i, -i));\n                coordinates.push(new Coordinate(-i, i));\n                coordinates.push(new Coordinate(i, -i));\n                coordinates.push(new Coordinate(0, i));\n                coordinates.push(new Coordinate(0, -i));\n                coordinates.push(new Coordinate(i, 0));\n                coordinates.push(new Coordinate(-i, 0));\n            }\n            return coordinates;\n        }\n        if (this.type == Type.KING) {\n            return [\n                new Coordinate(1, -1),\n                new Coordinate(1, 0),\n                new Coordinate(1, 1),\n                new Coordinate(0, 1),\n                new Coordinate(-1, 1),\n                new Coordinate(-1, 0),\n                new Coordinate(-1, -1),\n                new Coordinate(0, -1),\n            ];\n        }\n        return [];\n    }\n}\n","import { observable } from \"mobx\";\nimport Coordinate from \"./Coordinate\";\nimport Piece from \"./Piece\";\n\nexport default class Square {\n    @observable public coordinate: Coordinate;\n    @observable public isSelected?: boolean;\n    @observable public isSelectable?: boolean;\n    @observable public piece?: Piece;\n\n    constructor(coordinate: Coordinate, isSelected?: boolean, isSelectable?: boolean, piece?: Piece) {\n        this.coordinate = coordinate;\n        this.isSelected = isSelected;\n        this.isSelectable = isSelectable;\n        this.piece = piece;\n    }\n}\n","import { action } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport Square from \"./Square\";\nimport { boardStore } from \"./store/BoardStore\";\n\ninterface ISquareCoordinate {\n    square: Square;\n    isPressed: boolean;\n}\n\n@observer\nexport default class SquareCoordinate extends React.Component<ISquareCoordinate, any> {\n    @action handleClick = (square: Square) => {\n        boardStore.handleClickedSquare(square);\n    };\n\n    render() {\n        const { square } = this.props;\n\n        const { isSelected } = square;\n        return (\n            <button className=\"square\" onClick={() => this.handleClick(square)} disabled={!square.isSelectable} style={square.isSelected ? { backgroundColor: \"green\" } : { backgroundColor: \"grey\" }}>\n                <span style={{ fontSize: 6 }}>{\"Col: \" + square.coordinate.col + \" Row: \" + square.coordinate.row}</span>\n                <span style={square.piece?.isWhite ? { color: \"white\" } : { color: \"black\" }}>{square.piece?.type || \"\"}</span>\n            </button>\n        );\n    }\n}\n","import * as React from \"react\";\nimport { boardStore } from \"./store/BoardStore\";\nimport { observer } from \"mobx-react\";\nimport SquareCoordinate from \"./SquareCoordinate\";\nimport Square from \"./Square\";\nimport Coordinate from \"./Coordinate\";\n\n@observer\nclass Board extends React.Component {\n    renderSquare(square: Square, isPressed: boolean) {\n        return <SquareCoordinate square={square} isPressed={isPressed} />;\n    }\n\n    getSquare(col: number, row: number) {\n        const square = boardStore.squares.find((x) => x.coordinate === new Coordinate(col, row));\n        return square;\n    }\n\n    render() {\n        const { squares, isPressed } = boardStore;\n\n        return (\n            <div>\n                <div className=\"board-row\">\n                    <SquareCoordinate square={squares[0]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[1]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[2]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[3]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[4]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[5]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[6]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[7]} isPressed={isPressed} />\n                </div>\n                <div className=\"board-row\">\n                    <SquareCoordinate square={squares[8]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[9]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[10]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[11]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[12]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[13]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[14]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[15]} isPressed={isPressed} />\n                </div>\n                <div className=\"board-row\">\n                    <SquareCoordinate square={squares[16]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[17]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[18]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[19]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[20]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[21]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[22]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[23]} isPressed={isPressed} />\n                </div>\n                <div className=\"board-row\">\n                    <SquareCoordinate square={squares[24]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[25]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[26]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[27]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[28]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[29]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[30]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[31]} isPressed={isPressed} />\n                </div>\n                <div className=\"board-row\">\n                    <SquareCoordinate square={squares[32]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[33]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[34]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[35]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[36]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[37]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[38]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[39]} isPressed={isPressed} />\n                </div>\n                <div className=\"board-row\">\n                    <SquareCoordinate square={squares[40]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[41]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[42]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[43]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[44]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[45]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[46]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[47]} isPressed={isPressed} />\n                </div>\n                <div className=\"board-row\">\n                    <SquareCoordinate square={squares[48]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[49]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[50]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[51]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[52]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[53]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[54]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[55]} isPressed={isPressed} />\n                </div>\n                <div className=\"board-row\">\n                    <SquareCoordinate square={squares[56]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[57]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[58]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[59]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[60]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[61]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[62]} isPressed={isPressed} />\n                    <SquareCoordinate square={squares[63]} isPressed={isPressed} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Board;\n","import * as React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Board from \"./Board\";\nimport { boardStore } from \"./store/BoardStore\";\nimport { observer } from \"mobx-react\";\nimport { action } from \"mobx\";\nimport SquareCoordinate from \"./SquareCoordinate\";\n\n@observer\nclass App extends React.Component {\n    @action handleReset = () => {\n        boardStore.reset();\n    };\n\n    render() {\n        const { isWhiteTurn } = boardStore;\n        return (\n            <>\n                <button onClick={() => this.handleReset()}>Reset</button>\n                <div className=\"status\">{isWhiteTurn ? \"White \" : \"Black \"} to move</div>\n                <div className=\"game\">\n                    <div className=\"game-board\">\n                        <Board />\n                    </div>\n                    <div className=\"game-info\">\n                        <div>{logo}</div>\n                        <ol>{/* TODO */}</ol>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}